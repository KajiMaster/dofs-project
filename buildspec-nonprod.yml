version: 0.2

env:
  variables:
    TF_ROOT: "terraform/environments/multi-env"

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo "Installing Terraform..."
      - curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
      - sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      - sudo apt-get update && sudo apt-get install terraform
      - terraform version
      - echo "Installing dependencies..."
      - mkdir -p /tmp/.terraform.d/plugin-cache
      - echo 'plugin_cache_dir = "/tmp/.terraform.d/plugin-cache"' > /tmp/.terraformrc
      
  pre_build:
    commands:
      - echo "=== Pre-Build Phase ==="
      - echo "Build started on $(date)"
      - echo "Target Environment -> $TF_WORKSPACE"
      - echo "Variables File -> $TF_VAR_FILE" 
      - echo "Terraform Root -> $TF_ROOT"
      - echo "Validating required environment variables..."
      - if [ -z "$TF_WORKSPACE" ] || [ -z "$TF_VAR_FILE" ]; then echo "ERROR TF_WORKSPACE and TF_VAR_FILE must be set" && exit 1; fi
      - echo "Changing to Terraform directory..."
      - cd $TF_ROOT
      - echo "Current directory $(pwd)"
      - echo "Available files"
      - ls -la

  build:
    commands:
      - echo "=== Build Phase ==="
      - echo "Initializing Terraform..."
      - terraform init -input=false
      - echo "Ensuring workspace $TF_WORKSPACE exists (auto-selected via TF_WORKSPACE env var)"
      - terraform workspace new $TF_WORKSPACE 2>/dev/null || true
      - echo "Current workspace $(terraform workspace show)"
      - echo "Validating Terraform configuration..."
      - terraform validate
      - echo "Running terraform plan..."
      - terraform plan -var-file="$TF_VAR_FILE" -input=false -out=tfplan
      - echo "Applying terraform plan..."
      - terraform apply -input=false -auto-approve tfplan
      - echo "Getting outputs..."
      - terraform output -json > terraform-outputs.json || echo "No outputs available"

  post_build:
    commands:
      - echo "=== Post-Build Phase ==="
      - echo "Build completed on $(date)"
      - if [ $CODEBUILD_BUILD_SUCCEEDING -eq 1 ]; then echo "SUCCESS Deployment to $TF_WORKSPACE completed successfully"; else echo "FAILED Deployment to $TF_WORKSPACE failed" && exit 1; fi
      - echo "Terraform state info"
      - terraform show -no-color | head -20 || echo "Unable to show state"

artifacts:
  files:
    - "**/*"
  base-directory: $TF_ROOT
  name: "terraform-$TF_WORKSPACE-$(date +%Y%m%d-%H%M%S)"

cache:
  paths:
    - '/tmp/.terraform.d/plugin-cache/**/*'